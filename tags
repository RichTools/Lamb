!_TAG_EXTRA_DESCRIPTION	anonymous	/Include tags for non-named objects like lambda/
!_TAG_EXTRA_DESCRIPTION	fileScope	/Include tags of file scope/
!_TAG_EXTRA_DESCRIPTION	pseudo	/Include pseudo tags/
!_TAG_EXTRA_DESCRIPTION	subparser	/Include tags generated by subparsers/
!_TAG_FIELD_DESCRIPTION	epoch	/the last modified time of the input file (only for F\/file kind tag)/
!_TAG_FIELD_DESCRIPTION	file	/File-restricted scoping/
!_TAG_FIELD_DESCRIPTION	input	/input file/
!_TAG_FIELD_DESCRIPTION	name	/tag name/
!_TAG_FIELD_DESCRIPTION	pattern	/pattern/
!_TAG_FIELD_DESCRIPTION	typeref	/Type and name of a variable or typedef/
!_TAG_FIELD_DESCRIPTION!C++	name	/aliased names/
!_TAG_FIELD_DESCRIPTION!Lisp	definer	/the name of the function or macro that defines the unknown\/Y-kind object/
!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_KIND_DESCRIPTION!C	d,macro	/macro definitions/
!_TAG_KIND_DESCRIPTION!C	e,enumerator	/enumerators (values inside an enumeration)/
!_TAG_KIND_DESCRIPTION!C	f,function	/function definitions/
!_TAG_KIND_DESCRIPTION!C	g,enum	/enumeration names/
!_TAG_KIND_DESCRIPTION!C	h,header	/included header files/
!_TAG_KIND_DESCRIPTION!C	m,member	/struct, and union members/
!_TAG_KIND_DESCRIPTION!C	s,struct	/structure names/
!_TAG_KIND_DESCRIPTION!C	t,typedef	/typedefs/
!_TAG_KIND_DESCRIPTION!C	u,union	/union names/
!_TAG_KIND_DESCRIPTION!C	v,variable	/variable definitions/
!_TAG_KIND_DESCRIPTION!C++	M,module	/modules/
!_TAG_KIND_DESCRIPTION!C++	P,partition	/partitions/
!_TAG_KIND_DESCRIPTION!C++	c,class	/classes/
!_TAG_KIND_DESCRIPTION!C++	d,macro	/macro definitions/
!_TAG_KIND_DESCRIPTION!C++	e,enumerator	/enumerators (values inside an enumeration)/
!_TAG_KIND_DESCRIPTION!C++	f,function	/function definitions/
!_TAG_KIND_DESCRIPTION!C++	g,enum	/enumeration names/
!_TAG_KIND_DESCRIPTION!C++	h,header	/included header files/
!_TAG_KIND_DESCRIPTION!C++	m,member	/class, struct, and union members/
!_TAG_KIND_DESCRIPTION!C++	n,namespace	/namespaces/
!_TAG_KIND_DESCRIPTION!C++	s,struct	/structure names/
!_TAG_KIND_DESCRIPTION!C++	t,typedef	/typedefs/
!_TAG_KIND_DESCRIPTION!C++	u,union	/union names/
!_TAG_KIND_DESCRIPTION!C++	v,variable	/variable definitions/
!_TAG_KIND_DESCRIPTION!Lisp	C,class	/classes/
!_TAG_KIND_DESCRIPTION!Lisp	G,generic	/generics/
!_TAG_KIND_DESCRIPTION!Lisp	M,method	/methods/
!_TAG_KIND_DESCRIPTION!Lisp	Y,unknown	/unknown type of definitions/
!_TAG_KIND_DESCRIPTION!Lisp	c,const	/constants/
!_TAG_KIND_DESCRIPTION!Lisp	f,function	/functions/
!_TAG_KIND_DESCRIPTION!Lisp	m,macro	/macros/
!_TAG_KIND_DESCRIPTION!Lisp	p,parameter	/parameters/
!_TAG_KIND_DESCRIPTION!Lisp	s,struct	/structs/
!_TAG_KIND_DESCRIPTION!Lisp	t,type	/types/
!_TAG_KIND_DESCRIPTION!Lisp	v,variable	/variables/
!_TAG_KIND_DESCRIPTION!Markdown	S,subsection	/level 2 sections/
!_TAG_KIND_DESCRIPTION!Markdown	T,l4subsection	/level 4 sections/
!_TAG_KIND_DESCRIPTION!Markdown	c,chapter	/chapters/
!_TAG_KIND_DESCRIPTION!Markdown	h,hashtag	/hashtags/
!_TAG_KIND_DESCRIPTION!Markdown	n,footnote	/footnotes/
!_TAG_KIND_DESCRIPTION!Markdown	s,section	/sections/
!_TAG_KIND_DESCRIPTION!Markdown	t,subsubsection	/level 3 sections/
!_TAG_KIND_DESCRIPTION!Markdown	u,l5subsection	/level 5 sections/
!_TAG_OUTPUT_EXCMD	mixed	/number, pattern, mixed, or combineV2/
!_TAG_OUTPUT_FILESEP	slash	/slash or backslash/
!_TAG_OUTPUT_MODE	u-ctags	/u-ctags or e-ctags/
!_TAG_OUTPUT_VERSION	1.1	/current.age/
!_TAG_PARSER_VERSION!C	1.1	/current.age/
!_TAG_PARSER_VERSION!C++	1.1	/current.age/
!_TAG_PARSER_VERSION!Lisp	1.1	/current.age/
!_TAG_PARSER_VERSION!Markdown	1.1	/current.age/
!_TAG_PATTERN_LENGTH_LIMIT	96	/0 for no limit/
!_TAG_PROC_CWD	/Users/richard/Developer/TheCLanguage/Lamb/	//
!_TAG_PROGRAM_AUTHOR	Universal Ctags Team	//
!_TAG_PROGRAM_NAME	Universal Ctags	/Derived from Exuberant Ctags/
!_TAG_PROGRAM_URL	https://ctags.io/	/official site/
!_TAG_PROGRAM_VERSION	6.2.0	/c06d333b3/
!_TAG_ROLE_DESCRIPTION!C!function	foreigndecl	/declared in foreign languages/
!_TAG_ROLE_DESCRIPTION!C!header	local	/local header/
!_TAG_ROLE_DESCRIPTION!C!header	system	/system header/
!_TAG_ROLE_DESCRIPTION!C!macro	undef	/undefined/
!_TAG_ROLE_DESCRIPTION!C!struct	foreigndecl	/declared in foreign languages/
!_TAG_ROLE_DESCRIPTION!C++!header	exported	/exported with "exported imported ..."/
!_TAG_ROLE_DESCRIPTION!C++!header	imported	/imported with "imported ..."/
!_TAG_ROLE_DESCRIPTION!C++!header	local	/local header/
!_TAG_ROLE_DESCRIPTION!C++!header	system	/system header/
!_TAG_ROLE_DESCRIPTION!C++!macro	undef	/undefined/
!_TAG_ROLE_DESCRIPTION!C++!module	imported	/imported with "imported ..."/
!_TAG_ROLE_DESCRIPTION!C++!module	partOwner	/used for specifying a partition/
!_TAG_ROLE_DESCRIPTION!C++!partition	imported	/imported with "imported ..."/
Abs	parser.h	/^} Abs;$/;"	t	typeref:struct:__anon1597d8c80308
App	parser.h	/^} App;$/;"	t	typeref:struct:__anon1597d8c80408
BUILD_PROJECT	build/richBuild.c	/^void BUILD_PROJECT() {$/;"	f	typeref:typename:void
CLEANUP	build/richBuild.h	/^#define CLEANUP(/;"	d
CMD	build/richBuild.h	/^#define CMD(cmd) printf("[CMD]/;"	d
COLOR_RED	diagnostics.h	/^#define COLOR_RED /;"	d
COLOR_RESET	diagnostics.h	/^#define COLOR_RESET /;"	d
COLOR_YELLOW	diagnostics.h	/^#define COLOR_YELLOW /;"	d
COMPILE	build/richBuild.h	/^#define COMPILE(/;"	d
CONVERSION_ALPHA	interpreter.h	/^    CONVERSION_ALPHA,$/;"	e	enum:__anon8161b08f0103
DEBUG_H	debug.h	/^#define DEBUG_H$/;"	d
DIAGNOSTICS_H	diagnostics.h	/^#define DIAGNOSTICS_H$/;"	d
DIAG_ERROR	diagnostics.h	/^    DIAG_ERROR,$/;"	e	enum:__anond2f53fd30103
DIAG_NOTE	diagnostics.h	/^    DIAG_NOTE$/;"	e	enum:__anond2f53fd30103
DIAG_WARNING	diagnostics.h	/^    DIAG_WARNING,$/;"	e	enum:__anond2f53fd30103
DONE	build/richBuild.h	/^#define DONE(msg, file) printf("[DONE]/;"	d
Def	parser.h	/^} Def;$/;"	t	typeref:struct:__anon1597d8c80508
DiagSeverity	diagnostics.h	/^} DiagSeverity;$/;"	t	typeref:enum:__anond2f53fd30103
EXCLUDE	build/richBuild.h	/^#define EXCLUDE(/;"	d
EXPR_ABS	parser.h	/^  EXPR_ABS,   \/\/ <function>$/;"	e	enum:__anon1597d8c80103
EXPR_APP	parser.h	/^  EXPR_APP,   \/\/ <application>$/;"	e	enum:__anon1597d8c80103
EXPR_DEF	parser.h	/^  EXPR_DEF,   \/\/ <assignment>$/;"	e	enum:__anon1597d8c80103
EXPR_IMPORT	parser.h	/^  EXPR_IMPORT \/\/ <import>$/;"	e	enum:__anon1597d8c80103
EXPR_VAR	parser.h	/^  EXPR_VAR,   \/\/ <name>$/;"	e	enum:__anon1597d8c80103
Env	interpreter.h	/^} Env;$/;"	t	typeref:struct:EnvEntry
EnvEntry	interpreter.h	/^typedef struct EnvEntry {$/;"	s
Example 1	examples/example.md	/^### Example 1$/;"	S
Example 2	examples/example.md	/^### Example 2$/;"	S
Expr	parser.h	/^struct Expr $/;"	s
Expr	parser.h	/^typedef struct Expr Expr;$/;"	t	typeref:struct:Expr
ExprStream	interpreter.h	/^} ExprStream;$/;"	t	typeref:struct:__anon8161b08f0208
ExprType	parser.h	/^} ExprType;$/;"	t	typeref:enum:__anon1597d8c80103
FILENAME_SIZE_LIMIT	build/richBuild.h	/^const size_t FILENAME_SIZE_LIMIT = 256;$/;"	v	typeref:typename:const size_t
Grammar	README.md	/^### Grammar $/;"	S	section:Lamb""What is Lambda Calculus?
INFO	build/richBuild.h	/^#define INFO(msg) printf("[INFO]/;"	d
INITIAL_CAPACITY	lexer.h	/^#define INITIAL_CAPACITY /;"	d
INTERPRETER_H	interpreter.h	/^#define INTERPRETER_H$/;"	d
ImportExpr	parser.h	/^} ImportExpr;$/;"	t	typeref:struct:__anon1597d8c80608
LEXER_H	lexer.h	/^#define LEXER_H$/;"	d
Lamb	README.md	/^# Lamb$/;"	c
NUMBER_OF_FILES_TO_BUILD	build/richBuild.h	/^const size_t NUMBER_OF_FILES_TO_BUILD = 40;$/;"	v	typeref:typename:const size_t
PARSER_H	parser.h	/^#define PARSER_H$/;"	d
RAYLIB	build/richBuild.h	/^#define RAYLIB /;"	d
READ_FILES	build/richBuild.h	/^#define READ_FILES(/;"	d
REDUCTION_BETA	interpreter.h	/^    REDUCTION_BETA,$/;"	e	enum:__anon8161b08f0103
REDUCTION_DELTA	interpreter.h	/^    REDUCTION_DELTA,$/;"	e	enum:__anon8161b08f0103
REDUCTION_ETA	interpreter.h	/^    REDUCTION_ETA,$/;"	e	enum:__anon8161b08f0103
REDUCTION_NONE	interpreter.h	/^    REDUCTION_NONE,$/;"	e	enum:__anon8161b08f0103
RICHBUILD_H	build/richBuild.h	/^#define RICHBUILD_H$/;"	d
RICHBUILD_IMPLEMENTATION	Lamb.c	/^#define RICHBUILD_IMPLEMENTATION$/;"	d	file:
RICHBUILD_IMPLEMENTATION	build/richBuild.c	/^#define RICHBUILD_IMPLEMENTATION$/;"	d	file:
ReductionType	interpreter.h	/^} ReductionType;$/;"	t	typeref:enum:__anon8161b08f0103
Rules	README.md	/^### Rules$/;"	S	section:Lamb""What is Lambda Calculus?
TOKEN_DEF	lexer.h	/^    TOKEN_DEF,      \/\/ := Definition, Assignment$/;"	e	enum:__anon719f105b0103
TOKEN_DOT	lexer.h	/^    TOKEN_DOT,      \/\/ .$/;"	e	enum:__anon719f105b0103
TOKEN_EOE	lexer.h	/^    TOKEN_EOE,      \/\/ end of expression$/;"	e	enum:__anon719f105b0103
TOKEN_EOF	lexer.h	/^    TOKEN_EOF,$/;"	e	enum:__anon719f105b0103
TOKEN_IDENT	lexer.h	/^    TOKEN_IDENT,    \/\/ variable name like `True`, `X`, etc.$/;"	e	enum:__anon719f105b0103
TOKEN_IMPORT	lexer.h	/^    TOKEN_IMPORT,$/;"	e	enum:__anon719f105b0103
TOKEN_INVALID	lexer.h	/^    TOKEN_INVALID$/;"	e	enum:__anon719f105b0103
TOKEN_LAMBDA	lexer.h	/^    TOKEN_LAMBDA,   \/\/ Î»$/;"	e	enum:__anon719f105b0103
TOKEN_LPAREN	lexer.h	/^    TOKEN_LPAREN,   \/\/ ($/;"	e	enum:__anon719f105b0103
TOKEN_RPAREN	lexer.h	/^    TOKEN_RPAREN,   \/\/ )$/;"	e	enum:__anon719f105b0103
Token	lexer.h	/^} Token;$/;"	t	typeref:struct:__anon719f105b0208
TokenStream	lexer.h	/^} TokenStream;$/;"	t	typeref:struct:__anon719f105b0308
TokenType	lexer.h	/^} TokenType;$/;"	t	typeref:enum:__anon719f105b0103
Var	parser.h	/^} Var;$/;"	t	typeref:struct:__anon1597d8c80208
What is Lamb?	README.md	/^## What is Lamb?$/;"	s	chapter:Lamb
What is Lambda Calculus?	README.md	/^## What is Lambda Calculus?$/;"	s	chapter:Lamb
__anon1597d8c80103	parser.h	/^{$/;"	g
__anon1597d8c80208	parser.h	/^{$/;"	s
__anon1597d8c80308	parser.h	/^{$/;"	s
__anon1597d8c80408	parser.h	/^{$/;"	s
__anon1597d8c80508	parser.h	/^{$/;"	s
__anon1597d8c80608	parser.h	/^{$/;"	s
__anon1597d8c8070a	parser.h	/^  {$/;"	u	struct:Expr
__anon719f105b0103	lexer.h	/^{$/;"	g
__anon719f105b0208	lexer.h	/^{$/;"	s
__anon719f105b0308	lexer.h	/^{$/;"	s
__anon8161b08f0103	interpreter.h	/^typedef enum {$/;"	g
__anon8161b08f0208	interpreter.h	/^typedef struct {$/;"	s
__anond2f53fd30103	diagnostics.h	/^typedef enum {$/;"	g
abs	parser.h	/^      Abs abs;$/;"	m	union:Expr::__anon1597d8c8070a	typeref:typename:Abs
alpha_conversion	interpreter.c	/^Expr* alpha_conversion(Expr* expr, const char* old_name, const char* new_name)$/;"	f	typeref:typename:Expr *
app	parser.h	/^      App app;$/;"	m	union:Expr::__anon1597d8c8070a	typeref:typename:App
arg	parser.h	/^  Expr* arg;$/;"	m	struct:__anon1597d8c80408	typeref:typename:Expr *
beta_reduce	interpreter.c	/^Expr* beta_reduce(Expr* body, const char* var, Expr* value)$/;"	f	typeref:typename:Expr *
body	parser.h	/^  Expr* body;$/;"	m	struct:__anon1597d8c80308	typeref:typename:Expr *
capacity	interpreter.h	/^  size_t capacity;$/;"	m	struct:__anon8161b08f0208	typeref:typename:size_t
cflags	build/richBuild.c	/^#define cflags /;"	d	file:
clean_up	build/richBuild.h	/^void clean_up() {$/;"	f	typeref:typename:void
compile_files	build/richBuild.h	/^void compile_files(char* compiler, const char* files, const char* cflags, char* executable_name,/;"	f	typeref:typename:void
copy_expr	interpreter.c	/^Expr* copy_expr(Expr* expr)$/;"	f	typeref:typename:Expr *
count	interpreter.h	/^  size_t count;$/;"	m	struct:__anon8161b08f0208	typeref:typename:size_t
count	lexer.h	/^  int count;$/;"	m	struct:__anon719f105b0308	typeref:typename:int
count_files	build/richBuild.h	/^int count_files(const char* string) {$/;"	f	typeref:typename:int
da_append	interpreter.h	/^#define da_append(/;"	d
def	parser.h	/^      Def def;$/;"	m	union:Expr::__anon1597d8c8070a	typeref:typename:Def
env_add	interpreter.c	/^void env_add(Env** env, const char* name, Expr* value)$/;"	f	typeref:typename:void
env_lookup	interpreter.c	/^Expr* env_lookup(Env* env, const char* name)$/;"	f	typeref:typename:Expr *
eta_reduction	interpreter.c	/^Expr* eta_reduction(Expr* expr)$/;"	f	typeref:typename:Expr *
eval	interpreter.c	/^Expr* eval(Expr* expr, Env* env)$/;"	f	typeref:typename:Expr *
eval_module	interpreter.c	/^Expr* eval_module(Expr* expr, Env** env)$/;"	f	typeref:typename:Expr *
exclude_files	build/richBuild.h	/^void exclude_files(char** files, int size, ...) {$/;"	f	typeref:typename:void
executable_name	build/richBuild.c	/^#define executable_name /;"	d	file:
expect_and_consume	parser.c	/^void expect_and_consume(Token token, TokenType expect, int* pos)$/;"	f	typeref:typename:void
expect_and_get	parser.c	/^Token expect_and_get(Token token, TokenType expect, int* pos)$/;"	f	typeref:typename:Token
expression_as_string	debug.c	/^void expression_as_string(const Expr* e)$/;"	f	typeref:typename:void
expressions	interpreter.h	/^  TokenStream** expressions;$/;"	m	struct:__anon8161b08f0208	typeref:typename:TokenStream **
file_list	build/richBuild.h	/^char* file_list;$/;"	v	typeref:typename:char *
filename	parser.h	/^    const char* filename;$/;"	m	struct:__anon1597d8c80608	typeref:typename:const char *
free_env	interpreter.c	/^void free_env(Env* env)$/;"	f	typeref:typename:void
free_expr	parser.c	/^void free_expr(Expr* e)$/;"	f	typeref:typename:void
free_token_stream	lexer.c	/^void free_token_stream(TokenStream* stream)$/;"	f	typeref:typename:void
func	parser.h	/^  Expr* func;$/;"	m	struct:__anon1597d8c80408	typeref:typename:Expr *
get_files	build/richBuild.h	/^char* get_files(char* path) {$/;"	f	typeref:typename:char *
global_env	interpreter.c	/^static Env* global_env = NULL;$/;"	v	typeref:typename:Env *	file:
impt	parser.h	/^      ImportExpr impt;$/;"	m	union:Expr::__anon1597d8c8070a	typeref:typename:ImportExpr
interpret	interpreter.c	/^void interpret(ExprStream* stream)$/;"	f	typeref:typename:void
is_free_in	interpreter.c	/^bool is_free_in(const char* name, Expr* expr)$/;"	f	typeref:typename:bool
log_reduction	interpreter.c	/^void log_reduction(ReductionType type, const char* label, Expr* expr)$/;"	f	typeref:typename:void
main	Lamb.c	/^int main(int argc, char** argv) $/;"	f	typeref:typename:int
main	build/richBuild.c	/^int main() {$/;"	f	typeref:typename:int
name	interpreter.h	/^    const char* name;$/;"	m	struct:EnvEntry	typeref:typename:const char *
name	parser.h	/^  char* name;$/;"	m	struct:__anon1597d8c80208	typeref:typename:char *
name	parser.h	/^  char* name;$/;"	m	struct:__anon1597d8c80508	typeref:typename:char *
next	interpreter.h	/^    struct EnvEntry* next;$/;"	m	struct:EnvEntry	typeref:struct:EnvEntry *
next_token	lexer.c	/^Token next_token(const char** input)$/;"	f	typeref:typename:Token
param	parser.h	/^  char* param;$/;"	m	struct:__anon1597d8c80308	typeref:typename:char *
parse_definition	parser.c	/^Expr* parse_definition(TokenStream tokens, int* pos)$/;"	f	typeref:typename:Expr *
parse_expression	parser.c	/^Expr* parse_expression(TokenStream tokens, int* pos)$/;"	f	typeref:typename:Expr *
parse_file	Lamb.c	/^void parse_file(const char* filename)$/;"	f	typeref:typename:void
parse_function	parser.c	/^Expr* parse_function(TokenStream tokenStream, int* pos)$/;"	f	typeref:typename:Expr *
parse_import	parser.c	/^Expr* parse_import(TokenStream tokens, int* pos)$/;"	f	typeref:typename:Expr *
parse_primary	parser.c	/^Expr* parse_primary(TokenStream tokenStream, int* pos)$/;"	f	typeref:typename:Expr *
parse_variable	parser.c	/^Expr* parse_variable(TokenStream tokens, int* pos) $/;"	f	typeref:typename:Expr *
path	parser.h	/^    const char* path;$/;"	m	struct:__anon1597d8c80608	typeref:typename:const char *
print_expr	debug.c	/^void print_expr(const Expr* expr)$/;"	f	typeref:typename:void
print_expr_debug	debug.c	/^void print_expr_debug(const Expr* expr, int indent)$/;"	f	typeref:typename:void
print_indent	debug.c	/^void print_indent(int count, char ch, const char* string, char* value)$/;"	f	typeref:typename:void
report_diag	diagnostics.c	/^void report_diag(DiagSeverity severity, int pos, const char* msg)$/;"	f	typeref:typename:void
report_interp	diagnostics.c	/^void report_interp(DiagSeverity severity, const char* msg)$/;"	f	typeref:typename:void
resolve_relative_path	interpreter.c	/^char* resolve_relative_path(const char* current_file_path, const char* import_filename)$/;"	f	typeref:typename:char *
shift	Lamb.c	/^void shift(int* argc, char*** argv)$/;"	f	typeref:typename:void
str_ends_with	build/richBuild.h	/^int str_ends_with(const char* string, const char* suffix) {$/;"	f	typeref:typename:int
str_remove	build/richBuild.h	/^void str_remove(char** str, char* sub) {$/;"	f	typeref:typename:void
str_starts_with	build/richBuild.h	/^int str_starts_with(const char* string, const char* prefix) {$/;"	f	typeref:typename:int
todo	debug.h	/^#define todo(/;"	d
token_as_string	lexer.c	/^char* token_as_string(TokenType type)$/;"	f	typeref:typename:char *
tokenise	lexer.c	/^TokenStream tokenise(const char* input)$/;"	f	typeref:typename:TokenStream
tokens	lexer.h	/^  Token* tokens;$/;"	m	struct:__anon719f105b0308	typeref:typename:Token *
type	lexer.h	/^  TokenType type;$/;"	m	struct:__anon719f105b0208	typeref:typename:TokenType
type	parser.h	/^  ExprType type;$/;"	m	struct:Expr	typeref:typename:ExprType
value	interpreter.h	/^    Expr* value;$/;"	m	struct:EnvEntry	typeref:typename:Expr *
value	lexer.h	/^  char* value;$/;"	m	struct:__anon719f105b0208	typeref:typename:char *
value	parser.h	/^  Expr* value;$/;"	m	struct:__anon1597d8c80508	typeref:typename:Expr *
var	parser.h	/^      Var var;$/;"	m	union:Expr::__anon1597d8c8070a	typeref:typename:Var
